"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const fast_levenshtein_1 = __importDefault(require("fast-levenshtein"));
const constants_1 = require("./constants");
/**
 * Calculating Levenshtein distance between 2 strings
 * More info: https://en.wikipedia.org/wiki/Levenshtein_distance
 */
function getLevenshteinRelevance(a, b) {
    if (!a || a.length === 0 || !b || b.length === 0) {
        return 0;
    }
    const maxLength = Math.max(a.length, b.length);
    const levenshteinValue = fast_levenshtein_1.default.get(a, b);
    const levenshteinRelevance = 1 - levenshteinValue / maxLength;
    return levenshteinRelevance < constants_1.LEVENSHTEIN_MATCH_THRESHOLD ?
        0 : Math.max(0, Math.min(levenshteinRelevance, 1));
}
exports.getLevenshteinRelevance = getLevenshteinRelevance;
